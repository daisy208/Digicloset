import { signInWithEmailAndPassword, createUserWithEmailAndPassword, User, Auth } from "firebase/auth";

/**
 * Helper to extract error message from unknown error types.
 */
function getErrorMessage(error: unknown): string {
  if (error instanceof Error) {
    return error.message;
  }
  return String(error);
}

/**
 * Sign in with email and password.
 * @param auth - Firebase Auth instance
 * @param email - User's email address
 * @param password - User's password
 * @returns Firebase User object
 */
export const signIn = async (
  auth: Auth,
  email: string,
  password: string
): Promise<User> => {
  try {
    const userCredential = await signInWithEmailAndPassword(auth, email, password);
    return userCredential.user;
  } catch (error) {
    throw new Error(getErrorMessage(error));
  }
};

/**
 * Sign up with email and password.
 * @param auth - Firebase Auth instance
 * @param email - User's email address
 * @param password - User's password
 * @returns Firebase User object
 */
export const signUp = async (
  auth: Auth,
  email: string,
  password: string
): Promise<User> => {
  try {
    const userCredential = await createUserWithEmailAndPassword(auth, email, password);
    return userCredential.user;
  } catch (error) {
    throw new Error(getErrorMessage(error));
  }
};
