import { memo, useMemo, useCallback } from 'react';

// Memoized components
const ClothingItem = memo(({ item, onSelect, isSelected }: ClothingItemProps) => {
  const handleClick = useCallback(() => {
    onSelect(item);
  }, [item, onSelect]);

  const itemClasses = useMemo(() => 
    `group bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 ${
      isSelected ? 'ring-2 ring-indigo-500' : ''
    }`, [isSelected]
  );

  return (
    <div className={itemClasses} onClick={handleClick}>
      {/* Component content */}
    </div>
  );
});

// Virtual scrolling for large lists
import { FixedSizeList as List } from 'react-window';

const VirtualizedClothingList = ({ items }: { items: ClothingItem[] }) => (
  <List
    height={600}
    itemCount={items.length}
    itemSize={200}
    itemData={items}
  >
    {({ index, style, data }) => (
      <div style={style}>
        <ClothingItem item={data[index]} />
      </div>
    )}
  </List>
);
